{
  "openapi": "3.0.3",
  "info": {
    "title": "Bio Morocco API",
    "version": "1.0.0",
    "description": "API documentation for the E-commerce platform"
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Operations related to user authentication"
    },
    {
      "name": "User",
      "description": "Operations related to users"
    },
    {
      "name": "CartItem",
      "description": "Operations related to items in the shopping cart"
    },
    {
      "name": "Store",
      "description": "Operations related to stores"
    },
    {
      "name": "Category",
      "description": "Operations related to product categories"
    },
    {
      "name": "Product",
      "description": "Operations related to products"
    },
    {
      "name": "Order",
      "description": "Operations related to orders"
    },
    {
      "name": "Review",
      "description": "Operations related to product reviews"
    }
  ],
  "paths": {
    "/api/v1/signUp": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign up a new user",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "email": { "type": "string", "format": "email" },
                      "password": { "type": "string", "format": "password" },
                      "first_name": { "type": "string" },
                      "last_name": { "type": "string" },
                      "country": { "type": "string" },
                      "city": { "type": "string" },
                      "state": { "type": "string" },
                      "address": { "type": "string" },
                      "phone": { "type": "string" }
                    },
                    "required": [
                      "email",
                      "password",
                      "first_name",
                      "last_name",
                      "country",
                      "city",
                      "state",
                      "address",
                      "phone"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User signed up successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sign up successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "headers": {
              "Set-Cookie": {
                "description": "Session ID",
                "schema": {
                  "type": "string",
                  "example": "session_id=abcd1234; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forget_password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Request to change user password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code Generate successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Code generate successful, Check your email."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or user Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not Found!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Authentication"],
        "summary": "Request To change user password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": { "type": "integer", "format": 100000 },
                  "new_password": { "type": "string", "format": "password" },
                  "confirmed": { "type": "string", "format": "password" }
                },
                "required": ["email", "new_password", "confirmed"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password changed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or user Not Found or code Expire",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not Found or code Expired!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/logout": {
      "delete": {
        "tags": ["Authentication"],
        "summary": "Log out a user (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/profile": {
      "get": {
        "tags": ["User"],
        "summary": "Get user profile (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "email": {
                          "type": "string",
                          "example": "user@example.com"
                        },
                        "first_name": { "type": "string", "example": "John" },
                        "last_name": { "type": "string", "example": "Doe" },
                        "country": { "type": "string", "example": "USA" },
                        "city": { "type": "string", "example": "New York" },
                        "state": { "type": "string", "example": "NY" },
                        "address": {
                          "type": "string",
                          "example": "123 Main St"
                        },
                        "phone": { "type": "string", "example": "555-5555" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reset_password": {
      "put": {
        "tags": ["User"],
        "summary": "Reset user password (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string", "example": "old password" },
                  "new_password": {
                    "type": "string",
                    "example": "new_password"
                  },
                  "confirmed": { "type": "string", "example": "old password" }
                },
                "required": ["password", "confirmed"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Not store found create one!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "put": {
        "tags": ["User"],
        "summary": "Update user (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "email": { "type": "string", "format": "email" },
                      "password": { "type": "string", "format": "password" },
                      "first_name": { "type": "string" },
                      "last_name": { "type": "string" },
                      "country": { "type": "string" },
                      "city": { "type": "string" },
                      "state": { "type": "string" },
                      "address": { "type": "string" },
                      "phone": { "type": "string" }
                    },
                    "required": [
                      "email",
                      "password",
                      "first_name",
                      "last_name",
                      "country",
                      "city",
                      "state",
                      "address",
                      "phone"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User data updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Not store found create one!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Not store found create one!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/store": {
      "get": {
        "tags": ["Store"],
        "summary": "Get store data",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Store data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "store": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Store Name" },
                        "description": {
                          "type": "string",
                          "example": "Store Description"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://example.com/image.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Store"],
        "summary": "Update store (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "format": "name" },
                      "description": {
                        "type": "string",
                        "format": "description"
                      }
                    },
                    "required": ["name", "description"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Store data updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Store"],
        "summary": "Create new store (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "format": "name" },
                      "description": {
                        "type": "string",
                        "format": "description"
                      }
                    },
                    "required": ["name", "description"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Store created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Store created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Store"],
        "summary": "Delete store (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string", "example": "user_password" }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Store deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/categories": {
      "get": {
        "tags": ["Category"],
        "summary": "Get category data",
        "responses": {
          "200": {
            "description": "Store data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Store Name" },
                        "description": {
                          "type": "string",
                          "example": "Store Description"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://example.com/image.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Category"],
        "summary": "Create new Category (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "format": "name" },
                      "description": {
                        "type": "string",
                        "format": "description"
                      }
                    },
                    "required": ["name", "description"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Category created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{category_id}": {
      "get": {
        "tags": ["Category"],
        "summary": "Get category data",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Store data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "store": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Store Name" },
                        "description": {
                          "type": "string",
                          "example": "Store Description"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://example.com/image.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Category"],
        "summary": "Update Category data (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "format": "name" },
                      "description": {
                        "type": "string",
                        "format": "description"
                      }
                    },
                    "required": ["name", "description"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Category data updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Category"],
        "summary": "Delete Category (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string", "example": "user_password" }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Category deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/products": {
      "get": {
        "tags": ["Product"],
        "summary": "Get Product data",
        "responses": {
          "200": {
            "description": "Product data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Product": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Product Name" },
                        "description": {
                          "type": "string",
                          "example": "Product Description"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://example.com/image.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{category_id}/products": {
      "get": {
        "tags": ["Product"],
        "summary": "GET Product data by category",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "store": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "product Name" },
                        "description": {
                          "type": "string",
                          "example": "product Description"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://example.com/image.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Product"],
        "summary": "Create Product (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "New Product Name"
                      },
                      "stock": {
                        "type": "integer",
                        "example": 100
                      },
                      "reminder_stock": {
                        "type": "integer",
                        "example": 10
                      },
                      "price": {
                        "type": "integer",
                        "example": 10
                      },
                      "location": {
                        "type": "string",
                        "example": "New Product location"
                      },
                      "description": {
                        "type": "string",
                        "example": "New Product Description"
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "price",
                      "location",
                      "stock"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product data updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{product_id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get Product data",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "store": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "product Name" },
                        "description": {
                          "type": "string",
                          "example": "product Description"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://example.com/image.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Product"],
        "summary": "Update Product (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "New Product Name"
                      },
                      "stock": {
                        "type": "integer",
                        "example": 100
                      },
                      "reminder_stock": {
                        "type": "integer",
                        "example": 10
                      },
                      "price": {
                        "type": "integer",
                        "example": 10
                      },
                      "location": {
                        "type": "string",
                        "example": "New Product location"
                      },
                      "description": {
                        "type": "string",
                        "example": "New Product Description"
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "price",
                      "location",
                      "stock"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product data updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete Product (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string", "example": "user_password" }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/cartItems": {
      "get": {
        "tags": ["CartItem"],
        "summary": "Get all cart items (requires session_id in cookies)",
        "description": "Retrieve all items in the user's cart. Requires `session_id` cookie.",
        "parameters": [
          {
            "in": "cookie",
            "name": "session_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved cart items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "product_id": { "type": "integer" },
                      "quantity": { "type": "integer" }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session ID missing or invalid"
          }
        }
      }
    },
    "/api/v1/products/{product_id}/cartItems": {
      "put": {
        "tags": ["CartItem"],
        "summary": "Update a cart item (requires session_id in cookies)",
        "description": "Update the quantity of a cart item. Requires `session_id` cookie.",
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Product ID"
          },
          {
            "in": "cookie",
            "name": "session_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": { "type": "integer" }
                },
                "required": ["quantity"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated cart item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "product_id": { "type": "integer" },
                    "quantity": { "type": "integer" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session ID missing or invalid"
          },
          "404": {
            "description": "Not Found - Product not found"
          }
        }
      },
      "post": {
        "summary": "Add a product to cart (requires session_id in cookies)",
        "tags": ["CartItem"],
        "description": "Add a product to the user's cart. Requires `session_id` cookie.",
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Product ID"
          },
          {
            "in": "cookie",
            "name": "session_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": { "type": "integer" }
                },
                "required": ["quantity"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added product to cart",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "product_id": { "type": "integer" },
                    "quantity": { "type": "integer" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session ID missing or invalid"
          },
          "404": {
            "description": "Not Found - Product not found"
          }
        }
      }
    },
    "/api/v1/cartItems/{cartItem_id}": {
      "delete": {
        "tags": ["CartItem"],
        "summary": "Delete a cart item (requires session_id in cookies)",
        "description": "Remove a cart item. Requires `session_id` cookie.",
        "parameters": [
          {
            "in": "path",
            "name": "cartItem_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Cart Item ID"
          },
          {
            "in": "cookie",
            "name": "session_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted cart item"
          },
          "401": {
            "description": "Unauthorized - Session ID missing or invalid"
          },
          "404": {
            "description": "Not Found - Cart item not found"
          }
        }
      }
    },

    "/api/v1/users/orders": {
      "get": {
        "tags": ["Order"],
        "summary": "Get User Orders",
        "description": "Retrieve a list of orders for the authenticated user.",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "int",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string",
                        "example": "time"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "time"
                      },
                      "status": {
                        "type": "string",
                        "example": "padding"
                      },
                      "quantity": {
                        "type": "string",
                        "example": 100
                      },
                      "total_price": {
                        "type": "string",
                        "example": 100
                      },
                      "orderValid": {
                        "type": "string",
                        "example": 0
                      },
                      "user_id": {
                        "type": "string",
                        "example": 1
                      },
                      "product_id": {
                        "type": "string",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Order"],
        "summary": "Create User Order (requires session_id in cookies)",
        "description": "Create a new order",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "example": [1, 2]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order created successfully"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/{product_id}/orders": {
      "get": {
        "tags": ["Order"],
        "summary": "Get Product Orders",
        "description": "Retrieve a list of orders for a specific product.",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of product orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "int",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string",
                        "example": "time"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "time"
                      },
                      "status": {
                        "type": "string",
                        "example": "padding"
                      },
                      "quantity": {
                        "type": "string",
                        "example": 100
                      },
                      "total_price": {
                        "type": "string",
                        "example": 100
                      },
                      "orderValid": {
                        "type": "string",
                        "example": 0
                      },
                      "user_id": {
                        "type": "string",
                        "example": 1
                      },
                      "product_id": {
                        "type": "string",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Order"],
        "summary": "Create Product Order (requires session_id in cookies)",
        "description": "Create a new order for a specific product",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "int",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string",
                        "example": "time"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "time"
                      },
                      "status": {
                        "type": "string",
                        "example": "padding"
                      },
                      "quantity": {
                        "type": "integer",
                        "example": 100
                      },
                      "total_price": {
                        "type": "integer",
                        "example": 100
                      },
                      "orderValid": {
                        "type": "integer",
                        "example": 0
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "product_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/products/{product_id}/reviews/{review_id}": {
      "get": {
        "tags": ["Review"],
        "summary": "Get a specific review for a product",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "description": "The ID of the product",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "review_id",
            "in": "path",
            "required": true,
            "description": "The ID of the review",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "Product or review not found"
          }
        }
      }
    },
    "/api/v1/products/{product_id}/reviews": {
      "post": {
        "summary": "Create a new review for a product (requires session_id in cookies)",
        "tags": ["Review"],
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "description": "The ID of the review",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "rating": {
                        "type": "integer",
                        "example": 5
                      },
                      "comment": {
                        "type": "string",
                        "example": "comment"
                      }
                    },
                    "required": ["rating", "comment"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review created successfully"
          },
          "400": {
            "description": "Invalid request body (missing required fields, invalid rating value, etc.)"
          },
          "401": {
            "description": "Unauthorized (missing or invalid session_id)"
          }
        }
      },
      "get": {
        "tags": ["Review"],
        "summary": "Get all reviews for a product",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "description": "The ID of the product",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": ["Review"],
        "summary": "Update review for a product (requires session_id in cookies)",
        "parameters": [
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "rating": {
                        "type": "integer",
                        "example": 5
                      },
                      "comment": {
                        "type": "string",
                        "example": "comment"
                      }
                    },
                    "required": ["rating", "comment"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product data updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Session ID missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/{review_id}": {
      "delete": {
        "tags": ["Review"],
        "summary": "Delete a specific review for a product (requires session_id in cookies)",
        "parameters": [
          {
            "name": "review_id",
            "in": "path",
            "required": true,
            "description": "The ID of the review",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "session_id",
            "in": "cookie",
            "required": true,
            "description": "The ID of the review",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Review deleted successfully (no content returned)"
          },
          "401": {
            "description": "Unauthorized (missing or invalid credentials)"
          },
          "403": {
            "description": "Forbidden (user not authorized to delete"
          }
        }
      }
    }
  }
}
